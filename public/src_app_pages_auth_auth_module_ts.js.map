{"version":3,"file":"src_app_pages_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEhB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;KACpB;CACF,CAAC;IAMW,qBAAqB,SAArB,qBAAqB;;AAArB,qBAAqB;IAJjC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,qBAAqB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBO;AACM;AACF;AAEA;AAEiB;AAEvB;IAW1B,cAAc,SAAd,cAAc;;AAAd,cAAc;IAT1B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,uEAAqB;SACtB;QACD,YAAY,EAAE,CAAC,gDAAQ,CAAC;KACzB,CAAC;GACW,cAAc;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBY;AACyC;AACvC;AACQ;AAGe;IAUnD,QAAQ,SAAR,QAAQ;IAInB,YAAoB,MAAc,EAAU,eAAgC,EAAU,cAA8B,EAAU,MAAc;QAAxH,WAAM,GAAN,MAAM,CAAQ;QAAU,oBAAe,GAAf,eAAe,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEjJ,eAAe;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAGD,UAAU;QAER,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU,CAAC;YAC5B,SAAS,EAAE,0EAA0E;YACrF,QAAQ,EAAE,CAAC,QAAa,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC;SACrE,CAAC,CAAC;QAEH,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,YAAY,CAC7B,IAAI,CAAC,SAAS,CAAC,aAAa,EAC5B,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,CAAE,2BAA2B;SACjE,CAAC;IACJ,CAAC;IAED,wBAAwB,CAAC,QAAa;QACpC,+DAA+D;QAC/D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,SAAS,CAC5D,CAAC,IAAI,EAAE,EAAE;YACP,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE;gBACnB,wBAAwB;gBACxB,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACT,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACJ,CAAC;IAEK,YAAY;;YAChB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC9C,MAAM,EAAE,6CAA6C;gBACrD,OAAO,EAAE,wEAAwE;gBACjF,OAAO,EAAE,CAAC,IAAI,CAAC;aAChB,CAAC,CAAC;YAEH,MAAM,KAAK,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC;KAAA;;;;;;;;;wBA5CA,oDAAS,SAAC,WAAW;;AAFX,QAAQ;IALpB,wDAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,iEAA+B;;KAEhC,CAAC;GACW,QAAQ;AAAA","sources":["./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/auth.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthPage } from './auth.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPageRoutingModule } from './auth-routing.module';\n\nimport { AuthPage } from './auth.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AuthPageRoutingModule,\n  ],\n  declarations: [AuthPage]\n})\nexport class AuthPageModule {}\n","import { NgZone } from '@angular/core';\nimport { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n\nimport { UsuarioService } from '../../services/usuario.service';\n\n\ndeclare const google: any;\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.page.html',\n  styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements AfterViewInit {\n\n  @ViewChild('googleBtn') googleBtn!: ElementRef;\n\n  constructor(private router: Router, private alertController: AlertController, private usuarioService: UsuarioService, private ngZone: NgZone) { }\n\n  ngAfterViewInit() {\n    this.googleInit();\n  }\n\n\n  googleInit() {\n\n    google.accounts.id.initialize({\n      client_id: \"741201888674-e9nb12dhrsi1lsqql4mor1t9980vp132.apps.googleusercontent.com\",\n      callback: (response: any) => this.handleCredentialResponse(response)\n    });\n\n    google.accounts.id.renderButton(\n      this.googleBtn.nativeElement,\n      { theme: \"outline\", size: \"large\" }  // customization attributes\n    );\n  }\n\n  handleCredentialResponse(response: any) {\n    // console.log(\"Encoded JWT ID token: \" + response.credential);\n    this.usuarioService.loginGoogle(response.credential).subscribe(\n      (resp) => {\n        this.ngZone.run(() => {\n          //  Navegar al dashboard\n          this.router.navigateByUrl('/dashboard');\n        });\n      }, (err) => {\n        this.presentAlert();\n      }\n    );\n  }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'El usuario no es administrador o instructor',\n      message: 'Permiso denegado, hable con un administrador para habilitar su cuenta.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}